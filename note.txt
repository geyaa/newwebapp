(1)

import sqlite3

#temp memory
#connection = sqlite3.connect(':memory:')

#create a db
connection = sqlite3.connect('db_paqt.db')

#cursor
cur = connection.cursor()

#creating a table
c.execute("""CREATE TABLE account (
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    username TEXT,
    first_name TEXT,
    last_name TEXT,
    email TEXT,
    location TEXT,
    password TEXT
)
    """)

#datatype NULL(0) INTEGER(NUM 1-9) REAL TEXT BLOB


#commmit our command
connection.commit()

try:
    print("Connected...")

except Error as e:
    print (e)

connection.close()

______________________________________________

(2)
import sqlite3

#temp memory
#connection = sqlite3.connect(':memory:')

#create a db
connection = sqlite3.connect('db_paqt.db')

#cursor
c = connection.cursor()

#creating a table
'''
c.execute("""CREATE TABLE account (
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    username TEXT,
    first_name TEXT,
    last_name TEXT,
    email TEXT,
    location TEXT,
    password TEXT
)
    """)
'''

#insert data into the table
#c.execute("INSERT INTO account VALUES ('2', 'yoyo03', 'Yanik', 'Noak', 'noah.yanik@yahoo.com', 'Ottawa, Canada', 'irongold$$$')")

print("\nSuccess!")

c.execute('''SELECT * from account''')

#print data
result = c.fetchall()
print(result)

#commmit our command
connection.commit()

try:
    print("\nConnected...")

except Error as e:
    print (e)

connection.close()


$ python table.py
Success!
[(1, 'jb034', 'John', 'Bill', 'johnbill@hotmail.com', 'Ottawa, Canada', 'its@beautifulday'), (2, 'yoyo03', 'Yanik', 'Noak', 'noah.yanik@yahoo.com', 'Ottawa, Canada', 'irongold$$$')]

Connected...

_________

(3)
import sqlite3

#temp memory
#connection = sqlite3.connect(':memory:')

#create a db
connection = sqlite3.connect('demo.db')

#cursor
c = connection.cursor()

#creating a table
'''
c.execute("""CREATE TABLE account (
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    username TEXT,
    first_name TEXT,
    last_name TEXT,
    email TEXT,
    location TEXT,
    password TEXT
)
    """)
'''

#creating a list to execute many accounts in one go
many_costumer = [
                    ('1', 'jb034', 'John', 'Bill', 'johnbill@hotmail.com', 'Ottawa, Canada', 'its@beautifulday'),
                    ('2', 'yoyo03', 'Yanik', 'Noak', 'noah.yanik@yahoo.com', 'Ottawa, Canada', 'irongold$$$'),
                    ('3', 'moonrea', 'Luna', 'Vera', 'luna@vera.com', 'Rio, Brazil', 'imoonheart'),
                    ('4', 'paleo', 'Greg', 'Bran', 'gregbran@yourservice.com', 'Pluto, Universe', 'weirdoME'),
                    ('5', 'crate768', 'Art', 'Tistic', 'artistic@gmail.com', 'Bali, Indonesia', 'creative@'),
                ]

#insert data into the table
#will execute many                  (?,) indicator of the 7 columns
c.executemany("INSERT INTO account VALUES (?,?,?,?,?,?,?)", many_costumer)

print("\nSuccess!")

c.execute('''SELECT * from account''')

#print data
result = c.fetchall()
print(result)

#commmit our command
connection.commit()

try:
    print("\nConnected...")

except Error as e:
    print (e)

connection.close()


841994@sait227967iss MINGW64 ~/Desktop/ITSC310/PAQT_database
$ python demo.py

Success!
[(1, 'jb034', 'John', 'Bill', 'johnbill@hotmail.com', 'Ottawa, Canada', 'its@beautifulday'), (2, 'yoyo03', 'Yanik', 'Noak', 'noah.yanik@yahoo.com', 'Ottawa, Canada', 'irongold$$$'), (3, 'moonrea', 'Luna', 'Vera', 'luna@vera.com', 'Rio, Brazil', 'imoonheart'), (4, 'paleo', 'Greg', 'Bran', 'gregbran@yourservice.com', 'Pluto, Universe', 'weirdoME'), (5, 'crate768', 'Art', 'Tistic', 'artistic@gmail.com', 'Bali, Indonesia', 'creative@')]

Connected...

______

(4)

import sqlite3
from tabulate import tabulate

import sys

#temp memory
#connection = sqlite3.connect(':memory:')

#create a db
connection = sqlite3.connect('demo.db')

#cursor
c = connection.cursor()

#creating a table
'''
c.execute("""CREATE TABLE account (
    username TEXT,
    first_name TEXT,
    last_name TEXT,
    email TEXT,
    location TEXT,
    password TEXT
)
    """)


#creating a list to execute many accounts in one go
many_costumer = [
                    ('jb034', 'John', 'Bill', 'johnbill@hotmail.com', 'Ottawa, Canada', 'its@beautifulday'),
                    ('yoyo03', 'Yanik', 'Noak', 'noah.yanik@yahoo.com', 'Ottawa, Canada', 'irongold$$$'),
                    ('moonrea', 'Luna', 'Vera', 'luna@vera.com', 'Rio, Brazil', 'imoonheart'),
                    ('paleo', 'Greg', 'Bran', 'gregbran@yourservice.com', 'Pluto, Universe', 'weirdoME'),
                    ('crate768', 'Art', 'Tistic', 'artistic@gmail.com', 'Bali, Indonesia', 'creative@'),
                ]

#insert data into the table
#will execute many                  (?,) indicator of the 7 columns
c.executemany("INSERT INTO account VALUES (?,?,?,?,?,?)", many_costumer)

print("\nSuccess!")
'''

c.execute("SELECT rowid, * FROM account")

#print data
result = c.fetchall()

for data in result:
        #item = [data[0] , data[1] , data[2] , data[3] , data[4] , data[5]]
        #print (tabulate([data[0] , data[1] , data[2] , data[3] , data[4] , data[5]], headers=["USERNAME", "FIRSTNAME", "LASTNAME", "EMAIL", "LOCATION", "PASSWORD"]))
    print (data[0] , " | " , data[1] , " | " ,  data[2] ," | " , data[3] , " | " ,  data[4] , " | ",  data[5])

#commmit our command
connection.commit()


try:
    print("\nConnected...")

except Error as e:
    print (e)

connection.close()

$ python demo.py
1  |  jb034  |  John  |  Bill  |  johnbill@hotmail.com  |  Ottawa, Canada
2  |  yoyo03  |  Yanik  |  Noak  |  noah.yanik@yahoo.com  |  Ottawa, Canada
3  |  moonrea  |  Luna  |  Vera  |  luna@vera.com  |  Rio, Brazil
4  |  paleo  |  Greg  |  Bran  |  gregbran@yourservice.com  |  Pluto, Universe
5  |  crate768  |  Art  |  Tistic  |  artistic@gmail.com  |  Bali, Indonesia

Connected...



_____

(5) the app
import sqlite3
from tabulate import tabulate

import sys

#temp memory
#connection = sqlite3.connect(':memory:')

def show_all():
    #create a db
    connection = sqlite3.connect('demo.db')

    #cursor
    c = connection.cursor()

    #creating a table
    '''
    c.execute("""CREATE TABLE account (
        username TEXT,
        first_name TEXT,
        last_name TEXT,
        email TEXT,
        location TEXT,
        password TEXT
    )
        """)


    #creating a list to execute many accounts in one go
    many_costumer = [
                        ('jb034', 'John', 'Bill', 'johnbill@hotmail.com', 'Ottawa, Canada', 'its@beautifulday'),
                        ('yoyo03', 'Yanik', 'Noak', 'noah.yanik@yahoo.com', 'Ottawa, Canada', 'irongold$$$'),
                        ('moonrea', 'Luna', 'Vera', 'luna@vera.com', 'Rio, Brazil', 'imoonheart'),
                        ('paleo', 'Greg', 'Bran', 'gregbran@yourservice.com', 'Pluto, Universe', 'weirdoME'),
                        ('crate768', 'Art', 'Tistic', 'artistic@gmail.com', 'Bali, Indonesia', 'creative@'),
                    ]

    #insert data into the table
    #will execute many                  (?,) indicator of the 7 columns
    c.executemany("INSERT INTO account VALUES (?,?,?,?,?,?)", many_costumer)

    print("\nSuccess!")
    '''

    c.execute("SELECT rowid, * FROM account")

    #print data
    result = c.fetchall()

    for data in result:
            #item = [data[0] , data[1] , data[2] , data[3] , data[4] , data[5]]
            #print (tabulate([data[0] , data[1] , data[2] , data[3] , data[4] , data[5]], headers=["USERNAME", "FIRSTNAME", "LASTNAME", "EMAIL", "LOCATION", "PASSWORD"]))
        print (data[0] , " | " , data[1] , " | " ,  data[2] ," | " , data[3] , " | " ,  data[4] , " | ",  data[5])





    #commmit our command
    connection.commit()


    try:
        print("\nConnected...")

    except Error as e:
        print (e)

    #close connection to the db
    connection.close()
    print("\nConnection Closed...")


#adding new record to the table
def add_one(username, first_name, last_name, email, location, password):
    connection = sqlite3.connect('demo.db')
    c = connection.cursor()

    c.execute("INSERT INTO account VALUES (?,?,?,?,?,?)", (username, first_name, last_name, email, location, password))

    connection.commit()
    try:
        print("\nConnected...")
    except Error as e:
        print (e)
    connection.close()
    print("\nConnection Closed...")

def delete_one(id):
    connection = sqlite3.connect('demo.db')
    c = connection.cursor()

    c.execute("DELETE from account  WHERE rowid = (?)", id)

    connection.commit()
    try:
        print("\nConnected...")
    except Error as e:
        print (e)
    connection.close()
    print("\nConnection Closed...")

https://www.sqlitetutorial.net/sqlite-python/insert/
https://stackoverflow.com/questions/69619605/insert-date-from-html-form-into-sqlite-database-using-flask-sqlalchemy
https://pythonbasics.org/flask-sqlite/
https://www.tutorialspoint.com/python_data_access/python_sqlite_where_clause.htm
https://www.digitalocean.com/community/tutorials/how-to-make-a-web-application-using-flask-in-python-3
https://www.jcchouinard.com/simple-sqlite3-tutorial-with-python/#:~:text=%20Simple%20SQLite3%20Tutorial%20With%20Python%20%201,cursor%20object.%206%20Full%20code.%20%20More%20
https://pythonexamples.org/python-sqlite3-tutorial/
http://sqlitetutorials.com/sqlite-installation.html#:~:text=Install%20SQLite3%20on%20Windows%201%20Visit%20SqLite%20-,C%20directory%20called%20sqlite.%20...%20More%20items...%20
https://sqlite.org/docs.html
https://code.visualstudio.com/docs/python/tutorial-flask
https://www.osradar.com/how-to-install-flask-in-windows-10/
https://www.freecodecamp.org/news/how-to-build-a-web-application-using-flask-and-deploy-it-to-the-cloud-3551c985e492/
https://www.jetbrains.com/help/pycharm/creating-web-application-with-flask.html#login


